{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fetchData && $options.fetchData(...args))\n  }, \"Fetch Data from Spring Boot\"), _createElementVNode(\"p\", null, _toDisplayString($data.message), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","fetchData","_toDisplayString","$data","message"],"sources":["/Users/alfredamorrissey/Sites/spring-vue-ceiling-fan/vue-app/src/App.vue"],"sourcesContent":["<template>\n    <div id=\"app\">\n        <button @click=\"fetchData\">Fetch Data from Spring Boot</button>\n        <p>{{ message }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            message: \"\"\n        };\n    },\n    methods: {\n        async fetchData() {\n            const response = await fetch(\"http://localhost:8080/api/hello\");\n            this.message = await response.text();\n        }\n    }\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";;EACSA,EAAE,EAAC;AAAK;;uBAAbC,mBAAA,CAGM,OAHNC,UAGM,GAFFC,mBAAA,CAA+D;IAAtDC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,6BAA2B,GACtDH,mBAAA,CAAoB,WAAAM,gBAAA,CAAdC,KAAA,CAAAC,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}